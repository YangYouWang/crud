<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.yangyouwang.crud.system.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="io.github.yangyouwang.crud.system.entity.SysUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="pass_word" jdbcType="VARCHAR" property="passWord" />
    <result column="enabled" jdbcType="CHAR" property="enabled" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phonenumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="role_id" jdbcType="VARCHAR" property="roleIds" />
    <result column="post_id" jdbcType="VARCHAR" property="postIds" />
  </resultMap>
  <sql id="Base_Column_List">
    id, dept_id, user_name, pass_word, enabled, email, phonenumber, sex, avatar, create_by, create_time,
    update_by, update_time, remark
  </sql>
   <select id="findUserByName" resultMap="BaseResultMap">
       select
           u.id,u.dept_id,u.user_name,u.pass_word,u.enabled,
           group_concat(r.id) as role_id
       from sys_user u
                left join sys_user_role ur on u.id = ur.user_id
                left join sys_role r on ur.role_id = r.id
       where u.deleted = 0 and u.user_name = #{userName}
       group by u.id
  </select>
  <select id="findUserByUserId" resultMap="BaseResultMap">
      select
          u.id,u.dept_id,u.user_name,u.enabled,u.email,u.phonenumber,u.sex,u.avatar,u.remark,
          group_concat(r.id) as role_id,group_concat(p.id) as post_id
      from sys_user u
               left join sys_user_role ur on u.id = ur.user_id
               left join sys_role r on ur.role_id = r.id
               left join sys_user_post up on u.id = up.user_id
               left join sys_post p on up.post_id = p.id
      where u.deleted = 0 and u.id = #{id}
      group by u.id
  </select>
  <select id="findUserList" resultType="io.github.yangyouwang.crud.system.model.SysUserDTO">
      select
          u.id,u.user_name,u.email,u.phonenumber,u.sex,u.avatar,u.remark,
          d.dept_name,group_concat(r.role_name) as role_name,group_concat(p.post_name) as post_name
      from sys_user u
               left join sys_dept d on u.dept_id = d.id
               left join sys_user_role ur on u.id = ur.user_id
               left join sys_role r on ur.role_id = r.id
               left join sys_user_post up on u.id = up.user_id
               left join sys_post p on up.post_id = p.id
      where u.deleted = 0 and u.enabled = 'Y'
      group by u.id
  </select>
</mapper>