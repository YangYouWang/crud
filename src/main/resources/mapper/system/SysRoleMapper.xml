<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.yangyouwang.crud.system.mapper.SysRoleMapper">
  <resultMap id="BaseResultMap" type="io.github.yangyouwang.crud.system.entity.SysRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_key" jdbcType="VARCHAR" property="roleKey" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="menu_id" jdbcType="VARCHAR" property="menuIds" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, role_key, remark, create_by, create_time, update_by, update_time
  </sql>
    <select id="findRoleById" resultMap="BaseResultMap">
    select
        r.id as role_id, r.role_name, r.role_key, r.remark, r.create_by, r.create_time, r.update_by, r.update_time,
        group_concat(m.id) as menu_id
    from sys_role r
    left join sys_role_menu rm on r.id = rm.role_id
    left join sys_menu m on rm.menu_id = m.id
    where r.deleted = 0 and r.id = #{id}
    group by r.id
    </select>
</mapper>